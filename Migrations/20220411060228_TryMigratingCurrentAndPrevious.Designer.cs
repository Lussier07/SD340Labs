// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Lab1DataAnnotations.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20220411060228_TryMigratingCurrentAndPrevious")]
    partial class TryMigratingCurrentAndPrevious
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Lab1DataAnnotations.Models.Client", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreditExpiryDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreditHolderName")
                        .IsRequired()
                        .HasColumnType("VARCHAR(20)");

                    b.Property<bool>("CreditIsValid")
                        .HasColumnType("bit");

                    b.Property<int?>("CurrentRoomId")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("VARCHAR(25)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("VARCHAR(25)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PreviousRoomId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CurrentRoomId")
                        .IsUnique()
                        .HasFilter("[CurrentRoomId] IS NOT NULL");

                    b.HasIndex("PreviousRoomId")
                        .IsUnique()
                        .HasFilter("[PreviousRoomId] IS NOT NULL");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("Lab1DataAnnotations.Models.Room", b =>
                {
                    b.Property<int>("RoomNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoomNumber"), 1L, 1);

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<int?>("CurrentClientId")
                        .HasColumnType("int");

                    b.Property<int?>("PreviousClientId")
                        .HasColumnType("int");

                    b.Property<int>("Section")
                        .HasColumnType("int");

                    b.HasKey("RoomNumber");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("Lab1DataAnnotations.Models.Client", b =>
                {
                    b.HasOne("Lab1DataAnnotations.Models.Room", "CurrentRoom")
                        .WithOne("CurrentClient")
                        .HasForeignKey("Lab1DataAnnotations.Models.Client", "CurrentRoomId");

                    b.HasOne("Lab1DataAnnotations.Models.Room", "PreviousRoom")
                        .WithOne("PreviousClient")
                        .HasForeignKey("Lab1DataAnnotations.Models.Client", "PreviousRoomId");

                    b.Navigation("CurrentRoom");

                    b.Navigation("PreviousRoom");
                });

            modelBuilder.Entity("Lab1DataAnnotations.Models.Room", b =>
                {
                    b.Navigation("CurrentClient");

                    b.Navigation("PreviousClient");
                });
#pragma warning restore 612, 618
        }
    }
}
